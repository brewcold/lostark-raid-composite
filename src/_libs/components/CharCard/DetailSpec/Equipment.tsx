import { Fragment } from 'react';
import { advancedRefinement } from 'src/_libs/calc/advanced';
import { isArmor, isWeapon } from 'src/_libs/calc/boolean/is-armor-parts';
import { armorTypes, ArmoryEquipment } from 'src/_libs/types';
import { Spacing } from '../../_common/Spacing/spacing';
import { Txt } from '../../_common/Txt/Txt';
import { INFO, INFO_SPAN, INFO_SPAN_ADV, INFO_SPAN_ELIXIR, INFO_SPAN_EQUIP, ITEM_COLOR } from '../CharCard.css';

const gradeList = ['고대', '유물', '전설', '영웅', '고급', '희귀', '일반'];

const grade = {
  고대: '고대',
  유물: '유물',
  영웅: '영웅',
  희귀: '희귀',
  고급: '고급',
  전설: '전설',
};

const replacements = {
  어깨장식: '',
  견갑: '',
  모자: '',
  투구: '',
  머리장식: '',
  상의: '',
  하의: '',
  장갑: '',

  전투망치: '',
  대검: '',
  랜스: '',
  한손검: '',
  기공패: '',
  건틀릿: '',
  '헤비 건틀릿': '',
  창: '',
  총: '',
  런처: '',
  '서브 머신건': '',
  활: '',
  하프: '',
  스태프: '',
  '롱 스태프': '',
  '마법 덱': '',
  데모닉웨폰: '',
  대거: '',
  검: '',
  데스사이드: '',
  붓: '',
  우산: '',

  차원의: 'T3 영웅',
  '분출된 격랑의': 'T3 전설',
  '꿰뚫는 직시의': 'T3 전설',
  '지배의 송곳니': 'T3 유물',
  '고독한 지배의 송곳니': 'T3 유물',
  '배신의 본능': 'T3 유물',
  '숨어든 배신의 본능': 'T3 유물',
  '갈망의 늪': 'T3 유물',
  '노래하는 갈망의 늪': 'T3 유물',
  '파괴의 손아귀': 'T3 유물',
  '비웃는 파괴의 손아귀': 'T3 유물',
  '매혹의 본능': 'T3 유물',
  '춤추는 매혹의 본능': 'T3 유물',
  '사멸의 대지': 'T3 유물',
  '거짓된 사멸의 대지': 'T3 유물',
  '악몽의 꽃': 'T3 유물',
  '추악한 악몽의 꽃': 'T3 유물',
  '환각의 비명': 'T3 유물',
  '비열한 환각의 비명': 'T3 유물',
  '구원의 시': 'T3 유물',
  '적막한 구원의 시': 'T3 유물',

  '굳건한 지배의 균형': 'T3 아브 고대',
  '지배의 균형': 'T3 아브 고대',
  '광기의 지배': 'T3 아브 고대',
  '숨죽인 배신의 부름': 'T3 아브 고대',
  '배신의 부름': 'T3 아브 고대',
  '욕망의 배신': 'T3 아브 고대',
  '대면한 갈망의 타락': 'T3 아브 고대',
  '갈망의 타락': 'T3 아브 고대',
  '광기의 갈망': 'T3 아브 고대',
  '솟구친 파괴의 공포': 'T3 아브 고대',
  '파괴의 공포': 'T3 아브 고대',
  '마수의 파괴': 'T3 아브 고대',
  '매혹의 눈': 'T3 아브 고대',
  '떠오른 매혹의 눈': 'T3 아브 고대',
  '욕망의 매혹': 'T3 아브 고대',
  '사멸의 저주': 'T3 아브 고대',
  '드러난 사멸의 저주': 'T3 아브 고대',
  '마수의 사멸': 'T3 아브 고대',
  '피어난 악몽의 공명': 'T3 아브 고대',
  '악몽의 공명': 'T3 아브 고대',
  '몽환의 악몽': 'T3 아브 고대',
  '환각의 절규': 'T3 아브 고대',
  '분열한 환각의 절규': 'T3 아브 고대',
  '몽환의 환각': 'T3 아브 고대',
  '구원의 사슬': 'T3 아브 고대',
  '끝없는 구원의 사슬': 'T3 아브 고대',
  '군단의 구원': 'T3 아브 고대',

  '희생된 지배의 굴레': 'T3 일리 고대',
  '고요한 광기의 지배': 'T3 일리 고대',
  '짓눌린 배신의 구속': 'T3 일리 고대',
  '가라앉은 욕망의 배신': 'T3 일리 고대',
  '쇠락한 갈망의 그을림': 'T3 일리 고대',
  '사로잡힌 광기의 갈망': 'T3 일리 고대',
  '부패한 파괴의 제물': 'T3 일리 고대',
  '억눌린 마수의 파괴': 'T3 일리 고대',
  '미약한 매혹의 저주': 'T3 일리 고대',
  '정화된 욕망의 매혹': 'T3 일리 고대',
  '유인된 사멸의 종언': 'T3 일리 고대',
  '타락한 마수의 사멸': 'T3 일리 고대',
  '왜곡된 악몽의 궤적': 'T3 일리 고대',
  '전이된 몽환의 악몽': 'T3 일리 고대',
  '남겨진 환각의 가르침': 'T3 일리 고대',
  '차오른 몽환의 환각': 'T3 일리 고대',
  '떠도는 구원의 타륜': 'T3 일리 고대',
  '도래한 군단의 구원': 'T3 일리 고대',

  '빛나는 지배의 증명': 'T4 고대',
  '화려한 지배의 증명': 'T4 고대',
  '화려한 배신의 단서': 'T4 고대',
  '빛나는 배신의 단서': 'T4 고대',
  '빛나는 갈망의 본질': 'T4 고대',
  '화려한 갈망의 본질': 'T4 고대',
  '빛나는 파괴의 도전': 'T4 고대',
  '화려한 파괴의 도전': 'T4 고대',
  '화려한 매혹의 경계': 'T4 고대',
  '빛나는 매혹의 경계': 'T4 고대',
  '빛나는 사멸의 선언': 'T4 고대',
  '화려한 사멸의 선언': 'T4 고대',
  '화려한 악몽의 명령': 'T4 고대',
  '빛나는 악몽의 명령': 'T4 고대',
  '빛나는 환각의 미소': 'T4 고대',
  '화려한 환각의 미소': 'T4 고대',
  '화려한 구원의 전장': 'T4 고대',
  '빛나는 구원의 전장': 'T4 고대',
  '갈망의 본질': 'T4 고대',
  '구원의 전장': 'T4 고대',
  '환각의 미소': 'T4 고대',
  '악몽의 전장': 'T4 고대',
  '사멸의 선언': 'T4 고대',
  '매혹의 경계': 'T4 고대',
  '파괴의 도전': 'T4 고대',
  '배신의 단서': 'T4 고대',
  '지배의 증명': 'T4 고대',

  '빛나는 지배의': 'T4 유물',
  '화려한 지배의': 'T4 유물',
  '빛나는 배신의': 'T4 유물',
  '화려한 배신의': 'T4 유물',
  '빛나는 갈망의': 'T4 유물',
  '화려한 갈망의': 'T4 유물',
  '빛나는 파괴의': 'T4 유물',
  '화려한 파괴의': 'T4 유물',
  '빛나는 매혹의': 'T4 유물',
  '화려한 매혹의': 'T4 유물',
  '빛나는 사멸의': 'T4 유물',
  '화려한 사멸의': 'T4 유물',
  '빛나는 악몽의': 'T4 유물',
  '화려한 악몽의': 'T4 유물',
  '빛나는 환각의': 'T4 유물',
  '화려한 환각의': 'T4 유물',
  '빛나는 구원의': 'T4 유물',
  '화려한 구원의': 'T4 유물',
  지배: 'T4 유물',
  배신: 'T4 유물',
  갈망: 'T4 유물',
  파괴: 'T4 유물',
  매혹: 'T4 유물',
  사멸: 'T4 유물',
  악몽: 'T4 유물',
  환각: 'T4 유물',
  구원: 'T4 유물',
};

const target = new RegExp(Object.keys(replacements).join('|'), 'g');

export function Equipments({ data }: { data: ArmoryEquipment[] }) {
  return (
    <Txt as="p" styleVariant={INFO}>
      {data?.map(a => {
        const type = a.Type;
        const result = a.Name.replace(target, str => replacements[str]);
        const TEXT = `${type} ${result}`.trim();
        const 상재 = advancedRefinement(a);

        const 등급 = gradeList.find(g => TEXT.includes(g)) || '에스더';

        if (armorTypes.includes(type)) {
          return (
            <Fragment key={a.Name}>
              <Txt as="span" styleVariant={`${INFO_SPAN_EQUIP} ${ITEM_COLOR[등급]}`}>
                {TEXT}
              </Txt>
              <Spacing size="0.15rem" dir="hori" />
              <Txt as="span" styleVariant={INFO_SPAN_ADV}>
                {상재}
              </Txt>
              <br />
            </Fragment>
          );
        }
      })}
    </Txt>
  );
}
